>>> Interpreting: While programs <<<

Enter name of source file: 
switch2.txt

    sum := sum+k;
    k := k + 1;
    if (k < 0) then
       k := 0 - k
    ;
    
    while (k <10) do
      sum := sum+1
    
    
Scan successful
[ide(sum),assign,ide(sum),plus,ide(k),semicolon,ide(k),assign,ide(k),plus,num(1),semicolon,if,lparen,ide(k),less,num(0),rparen,then,ide(k),assign,num(0),minus,ide(k),semicolon,while,lparen,ide(k),less,num(10),rparen,do,ide(sum),assign,ide(sum),plus,num(1),eop]

Parse successful
Parse = [assign(sum,exp(plus,ide(sum),ide(k)),1),assign(k,exp(plus,ide(k),num(1)),2),if(bExpr(exp(less,ide(k),num(0)),3),assign(k,exp(minus,num(0),ide(k)),4)),while(bExpr(exp(less,ide(k),num(10)),5),assign(sum,exp(plus,ide(sum),num(1)),6))]

Blocks = [assign(sum,exp(plus,ide(sum),ide(k)),1),assign(k,exp(plus,ide(k),num(1)),2),bExpr(exp(less,ide(k),num(0)),3),assign(k,exp(minus,num(0),ide(k)),4),bExpr(exp(less,ide(k),num(10)),5),assign(sum,exp(plus,ide(sum),num(1)),6)]

Labels = [1,2,3,4,5,6]

Flow = [(1,2),(2,3),(4,5),(3,4),(6,5),(5,6)]

FlowR = [(2,1),(3,2),(5,4),(4,3),(5,6),(6,5)]


true ? 
